РАСШИРЕНИЕ ТИПОВ
Если вы объявляете переменную, не инициализируя ее с конкретным значением,
TypeScript использует внутренние типы null или undefined , которые преоб-
разуются в any . Это называется расширением типов.
Переменная принимает значение undefined :
let productId;
productId = null;
productId = undefined;
Компилятор TypeScript применяет расширение типов и присваивает тип any
значениям null и undefined . Поэтому тип переменной productId — это any .
Стоит упомянуть, что компилятор TypeScript поддерживает опцию
--strictNullCheck , запрещающую присвоение null переменным с известны-
ми типами. В следующем фрагменте кода productId имеет тип number , а вторая
и третья строки не будут скомпилированы, если включить --strictnullCheck :
let productId = 123;
productId = null; // ошибка компилятора
productId = undefined; // ошибка компилятора
Опция --strictnullCheck также помогает в перехвате потенциально неопреде-
ленных значений. Например, функция может возвращать объект с опциональ-
ным свойством, а ваш код может ошибочно предположить, что это свойство
присутствует, и попытаться применить к нему функцию.