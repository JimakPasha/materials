JS автоматически упаковывает примитивные типы в соответствующие объекты, когда встречает вызовы методов на них (и затем автоматически распаковывает. То есть в действительности, все методы которые мы вызываем на строках, хранятся в прототипе конструктора String. То же самое касается и всех остальных типов:

Интересно то, как происходит распаковка. Для этого JavaScript автоматически вызывает метод valueOf() у объекта:

const number = new Number(100);
// Его можно вызвать самостоятельно
console.log(number.valueOf()); // 100

В отличие от упаковки, распаковка выполняется абсолютно для всех объектов. Это позволяет определять valueOf() самостоятельно:


// https://ru.hexlet.io/courses/js-introduction-to-oop/lessons/boxing/theory_unit

----------------------------------------------------------------------------------
let str = "Привет";
console.log( str.toUpperCase() ); // ПРИВЕТ

1. Строка str – примитив. В момент обращения к его свойству, создаётся специальный объект, который знает значение строки и имеет такие полезные методы, как toUpperCase().
2. Этот метод запускается и возвращает новую строку (показывается в console).
3. Специальный объект удаляется, оставляя только примитив str.

Получается, что примитивы могут предоставлять методы, и в то же время оставаться «лёгкими».

// https://learn.javascript.ru/primitives-methods