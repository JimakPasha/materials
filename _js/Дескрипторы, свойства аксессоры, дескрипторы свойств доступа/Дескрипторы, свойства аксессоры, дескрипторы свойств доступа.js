Помимо значения value, свойства объекта имеют три специальных атрибута (так называемые «флаги»).

writable – если true, свойство можно изменить, иначе оно только для чтения.
enumerable – если true, свойство перечисляется в циклах, в противном случае циклы его игнорируют.
configurable – если true, свойство можно удалить, а эти атрибуты можно изменять, иначе этого делать нельзя.

- Метод Object.getOwnPropertyDescriptor позволяет получить полную информацию о свойстве.

const obj = {
  1: 'asd',
  2: 'asfasfasf asd'
}

let descriptor = Object.getOwnPropertyDescriptor(obj, 1);
console.log(descriptor);

- Чтобы изменить флаги, мы можем использовать метод Object.defineProperty

let descriptor = Object.defineProperty(obj, 1, {
  value: "John"
  следующие ребятки по умолчанию false, если их не указывать, но можно вручную указать
  "writable": false,
  "enumerable": false,
  "configurable": false
});

________________________________________________________________________________________
Cвойства-аксессоры

По своей сути это функции, которые используются для присвоения и получения значения, но во внешнем коде они выглядят как обычные свойства объекта.

________________________________________________________________________________________

Дескрипторы свойств доступа

Дескрипторы свойств-аксессоров отличаются от «обычных» свойств-данных.

Свойства-аксессоры не имеют value и writable, но взамен предлагают функции get и set.

То есть, дескриптор аксессора может иметь:

get – функция без аргументов, которая сработает при чтении свойства,
set – функция, принимающая один аргумент, вызываемая при присвоении свойства,
enumerable – то же самое, что и для свойств-данных,
configurable – то же самое, что и для свойств-данных.
