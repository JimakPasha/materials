У всех объектов есть __proto__
Объектом является все типы данных, просто они созданы с помощью разных функций конструкторов new String, new Number...
__proto__ почти всегда объект
Если одинаковый тип данных, то у них __proto__ равны, а у разных типов __proto__ не равны

У функций, которые являются class или функцией есть prototype.
И каждый prototype независимый объект со своим набором свойств и методов.

__proto__ ссылается на prototype класса функции-конструктора, с помощью которой этот объект был создан.


-----------------------------------

Зачем классу prototype???
и зачем объектам, созданым с помощью класса __proto__???


Если мы пытаемся прочитать свойство объекта, либо вызвать метод, а данного свойства или метода нет, то объект пойдёт искать его через ссылку __proto__, в prototyp-e класса, с помощью которого он создан.



// https://www.youtube.com/watch?v=b55hiUlhAzI

