Когда ищем дом элементы, то получаем коллекции, сущность похожа на массив, но не является им.

HTMLCollection — коллекция непосредственно HTML-элементов.
NodeList — коллекция узлов, более абстрактное понятие. Например, в DOM-дереве есть не только узлы-элементы, но также текстовые узлы, узлы-комментарии и другие, поэтому NodeList может содержать другие типы узлов.

 Живые (динамические) и неживые (статические). То есть либо реагируют на любое изменение DOM, либо нет. 

let booksList = document.querySelector(`.books`); // тут не живая, и если мы удалим элемент где-то в коде из коллекции, то она тут не обновится
let liveBooks = booksList.children; // а тут обновится

-----------------------------------------------------------
Доп:

Кроме children и querySelectorAll есть другие способы поиска DOM-элементов:

getElementsByTagName(tag) — находит все элементы с заданным тегом,
getElementsByClassName(className) — находит все элементы с заданным классом,
getElementsByName(name) — находит все элементы с заданным атрибутом name.
Все эти методы возвращают живые коллекции. Они используются реже, потому что в большинстве случаев удобнее применять querySelectorAll, но могут встречаться в старом коде.

Для решения большинства задач можно ограничиться неживыми коллекциями. Но если нужно сохранить ссылку на реальное состояние DOM — понадобится живая коллекция. Это удобно в тех случаях, когда программе нужно постоянно манипулировать списком элементов, которые могут регулярно удаляться и добавляться. Хороший пример — задачи в таск-трекере. С помощью живой коллекции можно хранить именно те задачи, которые фактически существуют в данный момент времени.