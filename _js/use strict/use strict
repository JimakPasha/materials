Режим strict (строгий режим), введённый в ECMAScript 5, позволяет использовать более строгий вариант JavaScript.
В es6 он по умолчанию включен (при транспайлинге бэйбл добовляет)

В строгом режиме:
1. Он заменяет исключениями некоторые ошибки, которые JS интерпретатор пропускает по умолчанию
2. Cтрогий режим исправляет ошибки, которые мешали движкам JavaScript выполнять оптимизацию -- в некоторых случаях код в строгом режиме может быть оптимизирован для более быстрого выполнения, чем код в обычном режиме.
3. Cтрогий режим запрещает использовать некоторые элементы синтаксиса, которые, вероятно, в следующих версиях ECMAScript получат особый смысл.
4. this не преобразуется в объект, а если значение this - undefined или null, то не преобразуется в глобальный объект
5. Нельзя присваивать значение в неопределённую переменную
6. больше слов, зарезервированных для использования в будущем
и ещё много...


ДОП:
Объединение скрипта в строгом режиме со скриптом в обычном выглядит как скрипт в строгом режиме! Справедливо и обратное: объединение обычного скрипта со строгим выглядит как нестрогий скрипт. Объединение только строгих или только обычных скриптов проходит без последствий, проблему вызывает совместное использование скриптов со строгим и обычным режимом. Поэтому рекомендуется включать строгий режим только на уровне функций (хотя бы в течение переходного периода).

ECMAScript 2015 представил модули JavaScript и, следовательно, 3-й способ войти в строгий режим. Все содержимое модулей JavaScript автоматически находится в строгом режиме, и для его запуска не требуется никаких инструкций.