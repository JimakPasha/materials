Принципы ООП парадигмы:

---------------------------------------

Инкапсуляция

Главное:

1 трактовка - в объект объединяются и данные и методы

2 трактовка - сокрытие внутренней структуры объекта от внешних воздействий. Т.е. все изменения состояний объекта происходят только с помощью обращений к методам самого объекта. Это позволяет избежать случайных взаимодействий

Остальное:

- сам класс является капсулой, которая содержит в себе свойство и методы и она позволяет их объеденить. Рядом с инкапсуляцией идёт сокрытие

- объект не должен изменяться ничем снаружи, кроме его собственных методов. (т.е)

---------------------------------------

Наследование

Главное:

Класс может наследовать поля и методы у другого класса. Что значит наследовать - это значит переиспользовать. Т.е. в классе появляются поля и методы автоматически, после того, как он объявляет себя наследником какого-то класса.

Остальное:

Класс наследника является классом предка, но это не значит что класс предка является классом наследника. Например класс собака является животным, но это не значит что животное является собакой. Наследник это более узкое понимание, чем тот класс от которого наследуемся, он сужает его, хотя там extends. С точки зрения логики это более узкое понятие, а с точки зрения языка более широкое, он расширяет дополняя свойствами.

---------------------------------------

Полиморфизм

Способность функции обрабатывать данные разных типов.

Это способность объекта в процессе своего выполнения ссылаться на экземпляры собственного класса или любого класса-потомка. Классы-потомки могут переопределять метод.

2 типа Полиморфизма:
1) ad-hoc. Полиморфизм по запросу 
- приведение данных (когда метод получает данные приведённые к тому типу к которому он обычно работает)
- перегрузка методов (когда метод существует в нескольких вариантах, с одинаковым названием, но с разными параметрами)
С точки зрения полиморфизма, это не настоящий полиморфизм. Если это пере

---------------------------------------

---------------------------------------