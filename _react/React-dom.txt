Глобальный ReactDOM предоставляет вам доступ к высокоуровневым API-методам.
react-dom предоставляет специфические для DOM методы

1.render()
2.hydrate()
3.unmountComponentAtNode()
4.findDOMNode()
5.createPortal()

1. ReactDOM.render(element, container[, callback])
Рендерит React-элемент в DOM-элемент, переданный в аргумент container и возвращает ссылку на компонент (или возвращает null для компонентов без состояния).
Если React-элемент уже был ранее отрендерен в container, то повторный вызов произведёт его обновление и изменит соответствующую часть DOM, чтобы она содержала последние изменения.

2. ReactDOM.hydrate(element, container[, callback])
То же, что и render(), но используется для гидратации контейнера, HTML-содержимое которого было отрендерено с помощью ReactDOMServer.

3.ReactDOM.unmountComponentAtNode(container)
Удаляет смонтированный компонент React из DOM и очищает его обработчики событий и состояние. Если в контейнер не было смонтировано ни одного компонента, вызов этой функции ничего не делает. Возвращает true, если компонент был размонтирован, и false если нет компонента для размонтирования.

4.ReactDOM.findDOMNode(component)
Метод устарел в StrictMode.
Если этот компонент был смонтирован в DOM, он возвращает соответствующий DOM-элемент браузера. Этот метод полезен для чтения напрямую из DOM (например, чтение значений полей формы) или произведения измерений DOM. В большинстве случаев, вы можете присоединить реф к узлу DOM и полностью избежать использования findDOMNode.
findDOMNode не может быть использован с функциональными компонентами.

5.ReactDOM.createPortal(child, container)
Создаёт портал. Порталы предоставляют способ отрендерить дочерние элементы в узле DOM, который существует вне иерархии DOM-компонента.